* Structures
0: asmember::A
  .0 Items: rc array of rc asmember::B

1: System::String
  .0 chars: ^u8
  .1 len: i32
interface impls:
  * rc System::Disposable
  * rc System::Comparable
  * rc System::Displayable

2: asmember::B

3: array of rc asmember::B
  .0 len: i32
  .1 ptr: ^rc asmember::B

* Interfaces: 
0: System::Disposable
  .0 (Dispose): (rc System::Disposable) -> none
1: System::Comparable
  .0 (Compare): (rc System::Comparable, rc System::Comparable) -> i32
2: System::Displayable
  .0 (ToString): (rc System::Displayable) -> rc System::String

* String literals
0: 'true'
1: 'false'

* Functions
0:  /* generated RC retain func for System::String */
0|   begin 
1|       local %1 of ^^u8
2|         fld %1 := @(%0^ as System::String).chars
3|       local %2 of ^i32
4|         fld %2 := @(%0^ as System::String).len
5|     end 

1:  /* <generated releaser for System::String> */
0|   begin 
1|       local %1 of ^^u8
2|         fld %1 := @(%0^ as System::String).chars
3|       local %2 of ^i32
4|         fld %2 := @(%0^ as System::String).len
5|     end 

2:  /* <generated empty retainer for rc array of rc asmember::B> */

3:  /* <generated dynarray releaser for rc array of rc asmember::B> */
 0|   begin 
 1|       local %1 of ^i32
 2|         fld %1 := @(%0^ as array of rc asmember::B).len
 3|       local %2 of ^^rc asmember::B
 4|         fld %2 := @(%0^ as array of rc asmember::B).ptr
 5|       local %3 of i32
 6|         mov %3 := 0i32
 7|   label 1:
 8|       local %4 of bool
 9|          eq %4 := %1^ = %3
10|       jmpif 2: if %4
11|       local %5 of ^rc asmember::B
12|         add %5 := %2^ + %3
13|     release %5^
14|         add %3 := %3 + 1i32
15|         jmp 1:
16|   label 2:
17|       local %6 of bool
18|          eq %6 := %1^ = 0i32
19|       jmpif 3: if %6
20|     dynfree %2^
21|   label 3:
22|         mov %1^ := 0i32
23|         mov %2^ := NULL
24|     end 

4:  /* generated RC retain func for asmember::A */
0|   begin 
1|       local %1 of ^rc array of rc asmember::B
2|         fld %1 := @(%0^ as asmember::A).Items
3|      retain %1^
4|     end 

5:  /* <generated releaser for asmember::A> */
0|   begin 
1|       local %1 of ^rc array of rc asmember::B
2|         fld %1 := @(%0^ as asmember::A).Items
3|     release %1^
4|     end 

6: System::Length<asmember.B>
 0|   begin 
 1|          // %0 = i32 (return slot)
 2|          // %1 = rc array of rc asmember::B
 3|      retain %1
 4|       local %2 of i32
 5|       begin 
 6|           local %3 of i32
 7|           begin 
 8|               local %4 of ^rc array of rc asmember::B
 9|              addrof %4 := @%1
10|                call %3 := System::ArrayLengthInternal(%4^)
11|             end 
12|             mov %2 := %3
13|         end 
14|         mov %0 := %2
15|     release %1
16|     end 
17|   label 0:

7: System::ArrayLengthInternal
<external function 'ArrayLengthInternal' in module 'rt'>

8: System::SetLength<asmember.B>
 0|   begin 
 1|          // %0 = ^rc array of rc asmember::B
 2|          // %1 = i32
 3|       begin 
 4|              // arr := if ArraySetLengthInternal(arr, len) is array of T newArr then newArr else arr
 5|           local %2 of ^rc array of rc asmember::B
 6|          addrof %2 := @%0^
 7|           local %3 of rc array of rc asmember::B
 8|           begin 
 9|               local %4 of rc any
10|               begin 
11|                   local %5 of ^rc array of rc asmember::B
12|                  addrof %5 := @%0^
13|                   local %6 of ^i32
14|                  addrof %6 := @%1
15|                    call %4 := System::ArraySetLengthInternal(%5^, %6^)
16|                 end 
17|               local %5 of bool
18|                  is %5 := %4 is rc array of rc asmember::B
19|               jmpif 1: if %5
20|                 jmp 3:
21|   label 1:
22|               begin 
23|                      // pattern binding newArr: rc array of rc asmember::B
24|                   local %6 of rc array of rc asmember::B
25|                     mov %6 := %4
26|                  retain %6
27|                   local %7 of ^rc array of rc asmember::B
28|                  addrof %7 := @%6
29|                     mov %3 := %7^
30|                  retain %3
31|                 release %6
32|                 end 
33|                 jmp 2:
34|   label 3:
35|               begin 
36|                   local %6 of ^rc array of rc asmember::B
37|                  addrof %6 := @%0^
38|                     mov %3 := %6^
39|                  retain %3
40|                 end 
41|   label 2:
42|             release %4
43|             end 
44|          retain %3
45|         release %2^
46|             mov %2^ := %3
47|         release %3
48|         end 
49|     end 
50|   label 0:

9: System::ArraySetLengthInternal
<external function 'ArraySetLengthInternal' in module 'rt'>

10: impl of System::Comparable.Compare for i32
 0|   begin 
 1|          // %0 = i32 (return slot)
 2|          // %1 = i32
 3|          // %2 = i32
 4|       local %3 of i32
 5|       begin 
 6|           local %4 of i32
 7|           begin 
 8|               local %5 of ^i32
 9|              addrof %5 := @%1
10|               local %6 of ^i32
11|              addrof %6 := @%2
12|                 sub %4 := %5^ - %6^
13|             end 
14|             mov %3 := %4
15|         end 
16|         mov %0 := %3
17|     end 
18|   label 0:

11: impl of System::Displayable.ToString for i32
 0|   begin 
 1|          // %0 = rc System::String (return slot)
 2|          // %1 = i32
 3|       local %2 of rc System::String
 4|       begin 
 5|           local %3 of rc System::String
 6|           begin 
 7|               local %4 of ^i32
 8|              addrof %4 := @%1
 9|                call %3 := System::IntToStr(%4^)
10|             end 
11|             mov %2 := %3
12|          retain %3
13|         release %3
14|         end 
15|         mov %0 := %2
16|      retain %0
17|     release %2
18|     end 
19|   label 0:

12: System::IntToStr
<external function 'IntToStr' in module 'rt'>

13: impl of System::Comparable.Compare for rc System::String
 0|   begin 
 1|          // %0 = i32 (return slot)
 2|          // %1 = rc System::String
 3|          // %2 = rc System::String
 4|      retain %1
 5|      retain %2
 6|       local %3 of i32
 7|       begin 
 8|           local %4 of i32
 9|           begin 
10|               local %5 of ^rc System::String
11|              addrof %5 := @%1
12|               local %6 of ^rc System::String
13|              addrof %6 := @%2
14|                call %4 := System::CompareStr(%5^, %6^)
15|             end 
16|             mov %3 := %4
17|         end 
18|         mov %0 := %3
19|     release %2
20|     release %1
21|     end 
22|   label 0:

14: System::CompareStr
  0|   begin 
  1|          // %0 = i32 (return slot)
  2|          // %1 = rc System::String
  3|          // %2 = rc System::String
  4|      retain %1
  5|      retain %2
  6|       local %3 of i32
  7|       begin 
  8|              // if a.len = 0 and b.len = 0  then begin...
  9|           begin 
 10|               local %4 of bool
 11|               begin 
 12|                   local %5 of bool
 13|                   begin 
 14|                       local %6 of ^i32
 15|                       begin 
 16|                           local %7 of ^rc System::String
 17|                          addrof %7 := @%1
 18|                             fld %6 := @(%7^ as rc System::String).len
 19|                         end 
 20|                       local %7 of i32
 21|                         mov %7 := 0i32
 22|                          eq %5 := %6^ = %7
 23|                     end 
 24|                   local %6 of bool
 25|                   begin 
 26|                       local %7 of ^i32
 27|                       begin 
 28|                           local %8 of ^rc System::String
 29|                          addrof %8 := @%2
 30|                             fld %7 := @(%8^ as rc System::String).len
 31|                         end 
 32|                       local %8 of i32
 33|                         mov %8 := 0i32
 34|                          eq %6 := %7^ = %8
 35|                     end 
 36|                     and %4 := %5 and %6
 37|                 end 
 38|               jmpif 1: if %4
 39|                 jmp 2:
 40|   label 1:
 41|               begin 
 42|                   begin 
 43|                       begin 
 44|                           begin 
 45|                                  // exit 0
 46|                               local %5 of i32
 47|                                 mov %5 := 0i32
 48|                                 mov %0 := %5
 49|                             release %2
 50|                             release %1
 51|                                 jmp 0:
 52|                             end 
 53|                         end 
 54|                     end 
 55|                 end 
 56|                 jmp 2:
 57|   label 2:
 58|             end 
 59|              // var aPos: Integer := 0
 60|           local %4 of i32
 61|           begin 
 62|               local %5 of i32
 63|                 mov %5 := 0i32
 64|                 mov %4 := %5
 65|             end 
 66|              // var bPos: Integer := 0
 67|           local %5 of i32
 68|           begin 
 69|               local %6 of i32
 70|                 mov %6 := 0i32
 71|                 mov %5 := %6
 72|             end 
 73|              // var cmp: Integer := 0
 74|           local %6 of i32
 75|           begin 
 76|               local %7 of i32
 77|                 mov %7 := 0i32
 78|                 mov %6 := %7
 79|             end 
 80|              // while true do begin...
 81|           begin 
 82|               local %7 of bool
 83|   label 3:
 84|               local %8 of bool
 85|                 mov %8 := true
 86|                 not %7 := ~%8
 87|               jmpif 5: if %7
 88|               begin 
 89|                   begin 
 90|                          // if aPos < a.len and bPos < b.len  then begin...
 91|                       begin 
 92|                           local %9 of bool
 93|                           begin 
 94|                               local %10 of bool
 95|                               begin 
 96|                                   local %11 of ^i32
 97|                                  addrof %11 := @%4
 98|                                   local %12 of ^i32
 99|                                   begin 
100|                                       local %13 of ^rc System::String
101|                                      addrof %13 := @%1
102|                                         fld %12 := @(%13^ as rc System::String).len
103|                                     end 
104|                                   local %13 of bool
105|                                      gt %13 := %11^ > %12^
106|                                   local %14 of bool
107|                                      eq %14 := %11^ = %12^
108|                                   local %15 of bool
109|                                      or %15 := %13 or %14
110|                                     not %10 := ~%15
111|                                 end 
112|                               local %11 of bool
113|                               begin 
114|                                   local %12 of ^i32
115|                                  addrof %12 := @%5
116|                                   local %13 of ^i32
117|                                   begin 
118|                                       local %14 of ^rc System::String
119|                                      addrof %14 := @%2
120|                                         fld %13 := @(%14^ as rc System::String).len
121|                                     end 
122|                                   local %14 of bool
123|                                      gt %14 := %12^ > %13^
124|                                   local %15 of bool
125|                                      eq %15 := %12^ = %13^
126|                                   local %16 of bool
127|                                      or %16 := %14 or %15
128|                                     not %11 := ~%16
129|                                 end 
130|                                 and %9 := %10 and %11
131|                             end 
132|                           jmpif 6: if %9
133|                             jmp 8:
134|   label 6:
135|                           begin 
136|                               begin 
137|                                   begin 
138|                                       begin 
139|                                              // let aChar: Byte := a.chars + aPos^
140|                                           local %10 of u8
141|                                           begin 
142|                                               local %11 of ^u8
143|                                               begin 
144|                                                   local %12 of ^^u8
145|                                                   begin 
146|                                                       local %13 of ^rc System::String
147|                                                      addrof %13 := @%1
148|                                                         fld %12 := @(%13^ as rc System::String).chars
149|                                                     end 
150|                                                   local %13 of ^i32
151|                                                  addrof %13 := @%4
152|                                                     add %11 := %12^ + %13^
153|                                                 end 
154|                                                 mov %10 := %11^
155|                                             end 
156|                                              // let bChar: Byte := b.chars + bPos^
157|                                           local %11 of u8
158|                                           begin 
159|                                               local %12 of ^u8
160|                                               begin 
161|                                                   local %13 of ^^u8
162|                                                   begin 
163|                                                       local %14 of ^rc System::String
164|                                                      addrof %14 := @%2
165|                                                         fld %13 := @(%14^ as rc System::String).chars
166|                                                     end 
167|                                                   local %14 of ^i32
168|                                                  addrof %14 := @%5
169|                                                     add %12 := %13^ + %14^
170|                                                 end 
171|                                                 mov %11 := %12^
172|                                             end 
173|                                              // cmp := if aChar > bChar  then 1 else if bChar > aChar  then -1 else 0
174|                                           local %12 of ^i32
175|                                          addrof %12 := @%6
176|                                           local %13 of i32
177|                                           begin 
178|                                               local %14 of bool
179|                                               begin 
180|                                                   local %15 of ^u8
181|                                                  addrof %15 := @%10
182|                                                   local %16 of ^u8
183|                                                  addrof %16 := @%11
184|                                                      gt %14 := %15^ > %16^
185|                                                 end 
186|                                               jmpif 9: if %14
187|                                                 jmp 11:
188|   label 9:
189|                                               begin 
190|                                                   local %15 of i32
191|                                                     mov %15 := 1i32
192|                                                     mov %13 := %15
193|                                                 end 
194|                                                 jmp 10:
195|   label 11:
196|                                               begin 
197|                                                   local %15 of i32
198|                                                   begin 
199|                                                       local %16 of bool
200|                                                       begin 
201|                                                           local %17 of ^u8
202|                                                          addrof %17 := @%11
203|                                                           local %18 of ^u8
204|                                                          addrof %18 := @%10
205|                                                              gt %16 := %17^ > %18^
206|                                                         end 
207|                                                       jmpif 12: if %16
208|                                                         jmp 14:
209|   label 12:
210|                                                       begin 
211|                                                           local %17 of i32
212|                                                             mov %17 := 1i32
213|                                                           local %18 of i32
214|                                                             sub %18 := 0i32 - %17
215|                                                             mov %15 := %18
216|                                                         end 
217|                                                         jmp 13:
218|   label 14:
219|                                                       begin 
220|                                                           local %17 of i32
221|                                                             mov %17 := 0i32
222|                                                             mov %15 := %17
223|                                                         end 
224|   label 13:
225|                                                     end 
226|                                                     mov %13 := %15
227|                                                 end 
228|   label 10:
229|                                             end 
230|                                             mov %12^ := %13
231|                                              // aPos := aPos + 1
232|                                           local %14 of ^i32
233|                                          addrof %14 := @%4
234|                                           local %15 of i32
235|                                           begin 
236|                                               local %16 of ^i32
237|                                              addrof %16 := @%4
238|                                               local %17 of i32
239|                                                 mov %17 := 1i32
240|                                                 add %15 := %16^ + %17
241|                                             end 
242|                                             mov %14^ := %15
243|                                              // bPos := bPos + 1
244|                                           local %16 of ^i32
245|                                          addrof %16 := @%5
246|                                           local %17 of i32
247|                                           begin 
248|                                               local %18 of ^i32
249|                                              addrof %18 := @%5
250|                                               local %19 of i32
251|                                                 mov %19 := 1i32
252|                                                 add %17 := %18^ + %19
253|                                             end 
254|                                             mov %16^ := %17
255|                                         end 
256|                                     end 
257|                                 end 
258|                             end 
259|                             jmp 7:
260|   label 8:
261|                           begin 
262|                               begin 
263|                                   begin 
264|                                          // if aPos < a.len and aPos >= b.len  then begin...
265|                                       begin 
266|                                           local %10 of bool
267|                                           begin 
268|                                               local %11 of bool
269|                                               begin 
270|                                                   local %12 of ^i32
271|                                                  addrof %12 := @%4
272|                                                   local %13 of ^i32
273|                                                   begin 
274|                                                       local %14 of ^rc System::String
275|                                                      addrof %14 := @%1
276|                                                         fld %13 := @(%14^ as rc System::String).len
277|                                                     end 
278|                                                   local %14 of bool
279|                                                      gt %14 := %12^ > %13^
280|                                                   local %15 of bool
281|                                                      eq %15 := %12^ = %13^
282|                                                   local %16 of bool
283|                                                      or %16 := %14 or %15
284|                                                     not %11 := ~%16
285|                                                 end 
286|                                               local %12 of bool
287|                                               begin 
288|                                                   local %13 of ^i32
289|                                                  addrof %13 := @%4
290|                                                   local %14 of ^i32
291|                                                   begin 
292|                                                       local %15 of ^rc System::String
293|                                                      addrof %15 := @%2
294|                                                         fld %14 := @(%15^ as rc System::String).len
295|                                                     end 
296|                                                   local %15 of bool
297|                                                      gt %15 := %13^ > %14^
298|                                                   local %16 of bool
299|                                                      eq %16 := %13^ = %14^
300|                                                      or %12 := %15 or %16
301|                                                 end 
302|                                                 and %10 := %11 and %12
303|                                             end 
304|                                           jmpif 15: if %10
305|                                             jmp 17:
306|   label 15:
307|                                           begin 
308|                                               begin 
309|                                                   begin 
310|                                                       begin 
311|                                                              // cmp := 1
312|                                                           local %11 of ^i32
313|                                                          addrof %11 := @%6
314|                                                           local %12 of i32
315|                                                             mov %12 := 1i32
316|                                                             mov %11^ := %12
317|                                                         end 
318|                                                     end 
319|                                                 end 
320|                                             end 
321|                                             jmp 16:
322|   label 17:
323|                                           begin 
324|                                               begin 
325|                                                   begin 
326|                                                          // if bPos < b.len and bPos >= a.len  then begin...
327|                                                       begin 
328|                                                           local %11 of bool
329|                                                           begin 
330|                                                               local %12 of bool
331|                                                               begin 
332|                                                                   local %13 of ^i32
333|                                                                  addrof %13 := @%5
334|                                                                   local %14 of ^i32
335|                                                                   begin 
336|                                                                       local %15 of ^rc System::String
337|                                                                      addrof %15 := @%2
338|                                                                         fld %14 := @(%15^ as rc System::String).len
339|                                                                     end 
340|                                                                   local %15 of bool
341|                                                                      gt %15 := %13^ > %14^
342|                                                                   local %16 of bool
343|                                                                      eq %16 := %13^ = %14^
344|                                                                   local %17 of bool
345|                                                                      or %17 := %15 or %16
346|                                                                     not %12 := ~%17
347|                                                                 end 
348|                                                               local %13 of bool
349|                                                               begin 
350|                                                                   local %14 of ^i32
351|                                                                  addrof %14 := @%5
352|                                                                   local %15 of ^i32
353|                                                                   begin 
354|                                                                       local %16 of ^rc System::String
355|                                                                      addrof %16 := @%1
356|                                                                         fld %15 := @(%16^ as rc System::String).len
357|                                                                     end 
358|                                                                   local %16 of bool
359|                                                                      gt %16 := %14^ > %15^
360|                                                                   local %17 of bool
361|                                                                      eq %17 := %14^ = %15^
362|                                                                      or %13 := %16 or %17
363|                                                                 end 
364|                                                                 and %11 := %12 and %13
365|                                                             end 
366|                                                           jmpif 18: if %11
367|                                                             jmp 20:
368|   label 18:
369|                                                           begin 
370|                                                               begin 
371|                                                                   begin 
372|                                                                       begin 
373|                                                                              // cmp := -1
374|                                                                           local %12 of ^i32
375|                                                                          addrof %12 := @%6
376|                                                                           local %13 of i32
377|                                                                             mov %13 := 1i32
378|                                                                           local %14 of i32
379|                                                                             sub %14 := 0i32 - %13
380|                                                                             mov %12^ := %14
381|                                                                         end 
382|                                                                     end 
383|                                                                 end 
384|                                                             end 
385|                                                             jmp 19:
386|   label 20:
387|                                                           begin 
388|                                                               begin 
389|                                                                   begin 
390|                                                                       begin 
391|                                                                              // break
392|                                                                             jmp 5:
393|                                                                         end 
394|                                                                     end 
395|                                                                 end 
396|                                                             end 
397|   label 19:
398|                                                         end 
399|                                                     end 
400|                                                 end 
401|                                             end 
402|   label 16:
403|                                         end 
404|                                     end 
405|                                 end 
406|                             end 
407|   label 7:
408|                         end 
409|                          // if cmp <> 0  then begin...
410|                       begin 
411|                           local %9 of bool
412|                           begin 
413|                               local %10 of ^i32
414|                              addrof %10 := @%6
415|                               local %11 of i32
416|                                 mov %11 := 0i32
417|                                  eq %9 := %10^ = %11
418|                                 not %9 := ~%9
419|                             end 
420|                           jmpif 21: if %9
421|                             jmp 22:
422|   label 21:
423|                           begin 
424|                               begin 
425|                                   begin 
426|                                          // break
427|                                         jmp 5:
428|                                     end 
429|                                 end 
430|                             end 
431|                             jmp 22:
432|   label 22:
433|                         end 
434|                     end 
435|                 end 
436|   label 4:
437|                 jmp 3:
438|   label 5:
439|             end 
440|           local %7 of ^i32
441|          addrof %7 := @%6
442|             mov %3 := %7^
443|         end 
444|         mov %0 := %3
445|     release %2
446|     release %1
447|     end 
448|   label 0:

15: impl of System::Displayable.ToString for rc System::String
 0|   begin 
 1|          // %0 = rc System::String (return slot)
 2|          // %1 = rc System::String
 3|      retain %1
 4|       local %2 of rc System::String
 5|       begin 
 6|           local %3 of ^rc System::String
 7|          addrof %3 := @%1
 8|             mov %2 := %3^
 9|          retain %3^
10|         end 
11|         mov %0 := %2
12|      retain %0
13|     release %2
14|     release %1
15|     end 
16|   label 0:

16: impl of System::Disposable.Dispose for rc System::String
 0|   begin 
 1|          // %0 = rc System::String
 2|      retain %0
 3|       begin 
 4|              // if self.len > 0  then begin...
 5|           begin 
 6|               local %1 of bool
 7|               begin 
 8|                   local %2 of ^i32
 9|                   begin 
10|                       local %3 of ^rc System::String
11|                      addrof %3 := @%0
12|                         fld %2 := @(%3^ as rc System::String).len
13|                     end 
14|                   local %3 of i32
15|                     mov %3 := 0i32
16|                      gt %1 := %2^ > %3
17|                 end 
18|               jmpif 1: if %1
19|                 jmp 2:
20|   label 1:
21|               begin 
22|                   begin 
23|                       begin 
24|                              // FreeMem(self.chars)
25|                           begin 
26|                               local %2 of ^^u8
27|                               begin 
28|                                   local %3 of ^rc System::String
29|                                  addrof %3 := @%0
30|                                     fld %2 := @(%3^ as rc System::String).chars
31|                                 end 
32|                                call System::FreeMem(%2^)
33|                             end 
34|                         end 
35|                     end 
36|                 end 
37|                 jmp 2:
38|   label 2:
39|             end 
40|              // self.chars := nil
41|           local %1 of ^^u8
42|           begin 
43|               local %2 of ^rc System::String
44|              addrof %2 := @%0
45|                 fld %1 := @(%2^ as rc System::String).chars
46|             end 
47|           local %2 of ^u8
48|             mov %2 := NULL
49|             mov %1^ := %2
50|              // self.len := 0
51|           local %3 of ^i32
52|           begin 
53|               local %4 of ^rc System::String
54|              addrof %4 := @%0
55|                 fld %3 := @(%4^ as rc System::String).len
56|             end 
57|           local %4 of i32
58|             mov %4 := 0i32
59|             mov %3^ := %4
60|         end 
61|     release %0
62|     end 
63|   label 0:

17: System::FreeMem
<external function 'FreeMem' in module 'rt'>

18: impl of System::Displayable.ToString for bool
 0|   begin 
 1|          // %0 = rc System::String (return slot)
 2|          // %1 = bool
 3|       local %2 of rc System::String
 4|       begin 
 5|           local %3 of rc System::String
 6|           begin 
 7|               local %4 of ^bool
 8|              addrof %4 := @%1
 9|               jmpif 1: if %4^
10|                 jmp 3:
11|   label 1:
12|               begin 
13|                   local %5 of rc System::String
14|                     mov %5 := 'true'
15|                     mov %3 := %5
16|                  retain %3
17|                 end 
18|                 jmp 2:
19|   label 3:
20|               begin 
21|                   local %5 of rc System::String
22|                     mov %5 := 'false'
23|                     mov %3 := %5
24|                  retain %3
25|                 end 
26|   label 2:
27|             end 
28|             mov %2 := %3
29|          retain %3
30|         release %3
31|         end 
32|         mov %0 := %2
33|      retain %0
34|     release %2
35|     end 
36|   label 0:

19:  /* generated RC retain func for asmember::B */

20:  /* <generated releaser for asmember::B> */

* Init:
  0|   begin 
  1|          // var a: asmember.A := asmember.A(Items: [])
  2|       local %0 of asmember::A
  3|       begin 
  4|           local %1 of asmember::A
  5|           begin 
  6|               local %2 of rc array of rc asmember::B
  7|               begin 
  8|                   rcnew array of rc asmember::B at %2^
  9|                   local %3 of ^i32
 10|                     fld %3 := @(%2 as rc array of rc asmember::B).len
 11|                     mov %3^ := 0i32
 12|                   local %4 of ^^rc asmember::B
 13|                     fld %4 := @(%2 as rc array of rc asmember::B).ptr
 14|                     mov %4^ := NULL
 15|                 end 
 16|                  // Items: [] (class 3)
 17|               local %3 of ^rc array of rc asmember::B
 18|                 fld %3 := @(%1 as asmember::A).Items
 19|                 mov %3^ := %2
 20|              retain %3^
 21|             release %2
 22|             end 
 23|             mov %0 := %1
 24|           local %2 of ^asmember::A
 25|          addrof %2 := @%0
 26|            call function 4(%2)
 27|           local %3 of ^asmember::A
 28|          addrof %3 := @%1
 29|            call function 5(%3)
 30|         end 
 31|          // var b: asmember.B := asmember.B()
 32|       local %1 of rc asmember::B
 33|       begin 
 34|           local %2 of rc asmember::B
 35|           rcnew asmember::B at %2^
 36|             mov %1 := %2
 37|          retain %1
 38|         release %2
 39|         end 
 40|          // let newIndex: Integer := System.Length[asmember.B](a.Items)
 41|       local %2 of i32
 42|       begin 
 43|           local %3 of i32
 44|           begin 
 45|               local %4 of ^rc array of rc asmember::B
 46|               begin 
 47|                   local %5 of ^asmember::A
 48|                  addrof %5 := @%0
 49|                     fld %4 := @(%5^ as asmember::A).Items
 50|                 end 
 51|                call %3 := System::Length<asmember.B>(%4^)
 52|             end 
 53|             mov %2 := %3
 54|         end 
 55|          // System.SetLength[asmember.B](a.Items, newIndex + 1)
 56|       begin 
 57|           local %3 of ^rc array of rc asmember::B
 58|           begin 
 59|               local %4 of ^asmember::A
 60|              addrof %4 := @%0
 61|                 fld %3 := @(%4^ as asmember::A).Items
 62|             end 
 63|           local %4 of ^rc array of rc asmember::B
 64|          addrof %4 := @%3^
 65|           local %5 of i32
 66|           begin 
 67|               local %6 of ^i32
 68|              addrof %6 := @%2
 69|               local %7 of i32
 70|                 mov %7 := 1i32
 71|                 add %5 := %6^ + %7
 72|             end 
 73|            call System::SetLength<asmember.B>(%4, %5)
 74|         end 
 75|          // a.Items [...] newIndex := b
 76|       local %3 of rc asmember::B
 77|       begin 
 78|           local %4 of ^rc array of rc asmember::B
 79|           begin 
 80|               local %5 of ^asmember::A
 81|              addrof %5 := @%0
 82|                 fld %4 := @(%5^ as asmember::A).Items
 83|             end 
 84|           local %5 of ^i32
 85|          addrof %5 := @%2
 86|           local %6 of ^rc asmember::B
 87|           begin 
 88|               local %7 of ^^rc asmember::B
 89|                 fld %7 := @(%4^ as rc array of rc asmember::B).ptr
 90|                 add %6 := %7^ + %5^
 91|             end 
 92|             mov %3 := %6^
 93|          retain %3
 94|         end 
 95|       local %4 of ^rc asmember::B
 96|      addrof %4 := @%1
 97|      retain %4^
 98|     release %3
 99|         mov %3 := %4^
100|     release %3
101|     release %1
102|       local %5 of ^asmember::A
103|      addrof %5 := @%0
104|        call function 5(%5)
105|     end 

